"use client";

import { useState, useEffect } from "react";

interface Excursion {
  id: number;
  name: string;
}

export default function BookTour() {
  const [excursions, setExcursions] = useState<Excursion[]>([]);
  const [formData, setFormData] = useState({
    excursionId: "",
    name: "",
    contactMethod: "Telegram",
    contactValue: "",
    adults: 1,
    children: 0,
    toddlers: 0,
  });
  const [showConfirmation, setShowConfirmation] = useState(false);
  const [currentTime, setCurrentTime] = useState(new Date());
  const [contactError, setContactError] = useState("");

  useEffect(() => {
    fetch("/api/excursions")
      .then((res) => res.json())
      .then((data: Excursion[]) => setExcursions(data))
      .catch(console.error);
  }, []);

  useEffect(() => {
    const timer = setInterval(() => setCurrentTime(new Date()), 1000);
    return () => clearInterval(timer);
  }, []);

  const formatTime = (date: Date) =>
    date.toLocaleTimeString("ru-RU", {
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
    });

  const isWorkingHours = (date: Date) => {
    const hour = date.getHours();
    return hour >= 9 && hour < 21;
  };

  const validateContact = (): boolean => {
    const value = formData.contactValue.trim();
    let isValid = true;

    switch (formData.contactMethod) {
      case "email":
        isValid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value);
        setContactError(isValid ? "" : "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.");
        break;
      case "–í—å–µ—Ç–Ω–∞–º—Å–∫–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞":
        isValid = /^(\+84|0)\d{9,10}$/.test(value);
        setContactError(isValid ? "" : "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—å–µ—Ç–Ω–∞–º—Å–∫–∏–π –Ω–æ–º–µ—Ä.");
        break;
      default:
        isValid = value.length > 1;
        setContactError(isValid ? "" : "–ü–æ–ª–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç—ã–º.");
    }

    return isValid;
  };

  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>
  ) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!validateContact()) return;
    setShowConfirmation(true);
  };

  const confirmAndSend = () => {
    setShowConfirmation(false);

    const excursionName =
      excursions.find((e) => e.id === Number(formData.excursionId))?.name || "‚Äî";

    const now = new Date();
    const formattedTime = now.toLocaleString("ru-RU", {
      day: "2-digit",
      month: "2-digit",
      year: "numeric",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
    });

    const text = `
üìå –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —ç–∫—Å–∫—É—Ä—Å–∏—é

üïí –ü–æ–ª—É—á–µ–Ω–∞: ${formattedTime}
üåç –≠–∫—Å–∫—É—Ä—Å–∏—è: ${excursionName}
üë§ –ò–º—è: ${formData.name}
üìû –°–ø–æ—Å–æ–± —Å–≤—è–∑–∏: ${formData.contactMethod}
üîó –ö–æ–Ω—Ç–∞–∫—Ç: ${formData.contactValue}
üë™ –í–∑—Ä–æ—Å–ª—ã–µ: ${formData.adults}
üßí –î–µ—Ç–∏: ${formData.children}
üë∂ –ú–∞–ª—ã—à–∏: ${formData.toddlers}
    `.trim();

    fetch("/api/bot/send-request", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ text }),
    })
      .then(() => alert("–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!"))
      .catch(() => alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏."));
  };

  return (
    <div className="container mx-auto px-4 py-16 pt-24 max-w-xl">
      <h1 className="text-3xl font-bold mb-6">–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ä</h1>

      <form onSubmit={handleSubmit} className="space-y-4">
        <div>
          <label className="block mb-1">–í—ã–±–æ—Ä —ç–∫—Å–∫—É—Ä—Å–∏–∏</label>
          <select
            name="excursionId"
            value={formData.excursionId}
            onChange={handleChange}
            required
            className="w-full border px-3 py-2 rounded"
          >
            <option value="" disabled>–í—ã–±–µ—Ä–∏—Ç–µ —ç–∫—Å–∫—É—Ä—Å–∏—é</option>
            {excursions.map((tour) => (
              <option key={tour.id} value={tour.id}>{tour.name}</option>
            ))}
          </select>
        </div>

        <div>
          <label className="block mb-1 flex items-center gap-2">
            –ò–º—è
            <span title="–ö–∞–∫ –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?" className="cursor-help text-blue-600">‚ùî</span>
          </label>
          <input
            type="text"
            name="name"
            required
            value={formData.name}
            onChange={handleChange}
            className="w-full border px-3 py-2 rounded"
          />
        </div>

        <div>
          <label className="block mb-1">–ö–∞–∫ —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è</label>
          <select
            name="contactMethod"
            value={formData.contactMethod}
            onChange={handleChange}
            className="w-full border px-3 py-2 rounded mb-2"
          >
            <option>Telegram</option>
            <option>Whatsapp</option>
            <option>Zalo</option>
            <option>email</option>
            <option>–í—å–µ—Ç–Ω–∞–º—Å–∫–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</option>
          </select>
          <input
            type="text"
            name="contactValue"
            required
            value={formData.contactValue}
            onChange={handleChange}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç"
            className="w-full border px-3 py-2 rounded"
          />
          {contactError && (
            <p className="text-red-500 text-sm mt-1">{contactError}</p>
          )}
        </div>

        {[
          {
            label: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∑—Ä–æ—Å–ª—ã—Ö",
            name: "adults",
            tooltip: '–í–æ –í—å–µ—Ç–Ω–∞–º–µ —á–∞—â–µ –≤—Å–µ–≥–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–æ—Å—Ç–∞: "–≤–∑—Ä–æ—Å–ª—ã–π" ‚Äî –±–æ–ª–µ–µ 120 —Å–º, –∏—Å–∫–ª—é—á–µ–Ω–∏–µ ‚Äî —ç–∫—Å–∫—É—Ä—Å–∏—è –Ω–∞ –æ—Å—Ç—Ä–æ–≤ DoiDep: "–≤–∑—Ä–æ—Å–ª—ã–π" ‚Äî 12 –ª–µ—Ç –∏ –±–æ–ª–µ–µ.',
          },
          {
            label: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π",
            name: "children",
            tooltip: '–í–æ –í—å–µ—Ç–Ω–∞–º–µ —á–∞—â–µ –≤—Å–µ–≥–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–æ—Å—Ç–∞: "—Ä–µ–±—ë–Ω–æ–∫" ‚Äî –æ—Ç 90 –¥–æ 120 —Å–º, –∏—Å–∫–ª—é—á–µ–Ω–∏–µ ‚Äî —ç–∫—Å–∫—É—Ä—Å–∏—è –Ω–∞ –æ—Å—Ç—Ä–æ–≤ DoiDep: "—Ä–µ–±—ë–Ω–æ–∫" ‚Äî –æ—Ç 3 –¥–æ 12 –ª–µ—Ç.',
          },
          {
            label: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–ª–µ–Ω—å–∫–∏—Ö –¥–µ—Ç–µ–π",
            name: "toddlers",
            tooltip: '–í–æ –í—å–µ—Ç–Ω–∞–º–µ —á–∞—â–µ –≤—Å–µ–≥–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–æ—Å—Ç–∞: "–º–∞–ª–µ–Ω—å–∫–∏–π —Ä–µ–±—ë–Ω–æ–∫" ‚Äî –¥–æ 90 —Å–º, –∏—Å–∫–ª—é—á–µ–Ω–∏–µ ‚Äî —ç–∫—Å–∫—É—Ä—Å–∏—è –Ω–∞ –æ—Å—Ç—Ä–æ–≤ DoiDep: "–º–∞–ª–µ–Ω—å–∫–∏–π —Ä–µ–±—ë–Ω–æ–∫" ‚Äî –¥–æ 3 –ª–µ—Ç.',
          },
        ].map(({ label, name, tooltip }) => (
          <div key={name}>
            <label className="block mb-1 flex items-center gap-2">
              {label}
              <span title={tooltip} className="cursor-help text-blue-600">‚ùî</span>
            </label>
            <input
              type="number"
              name={name}
              min={0}
              required
              value={formData[name as keyof typeof formData]}
              onChange={handleChange}
              className="w-full border px-3 py-2 rounded"
            />
          </div>
        ))}

        <div className="text-sm text-gray-700 mt-4">
          <p>–†–∞–±–æ—á–∏–µ —á–∞—Å—ã: 09:00 - 21:00</p>
          <p>–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {formatTime(currentTime)}</p>
          <p className="font-medium">
            {isWorkingHours(currentTime)
              ? "–ú–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–≤–µ—Ç–∏—Ç –í–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è"
              : "–ú–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–≤–µ—Ç–∏—Ç –í–∞–º –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è"}
          </p>
        </div>

        <button
          type="submit"
          className="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 mt-4"
        >
          –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
        </button>
      </form>

      {showConfirmation && (
        <div className="mt-6 p-4 border rounded bg-yellow-100">
          <h2 className="text-lg font-bold mb-2">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</h2>
          <p>–ï—Å–ª–∏ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –º—ã –Ω–µ —Å–º–æ–∂–µ–º —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è.</p>
          <ul className="mt-2 list-disc list-inside text-sm">
            <li>–≠–∫—Å–∫—É—Ä—Å–∏—è: {excursions.find((e) => e.id === Number(formData.excursionId))?.name || "‚Äî"}</li>
            <li>–ò–º—è: {formData.name}</li>
            <li>–°–≤—è–∑—å: {formData.contactMethod} ‚Äî {formData.contactValue}</li>
            <li>–í–∑—Ä–æ—Å–ª—ã—Ö: {formData.adults}</li>
            <li>–î–µ—Ç–µ–π: {formData.children}</li>
            <li>–ú–∞–ª–µ–Ω—å–∫–∏—Ö –¥–µ—Ç–µ–π: {formData.toddlers}</li>
          </ul>
          <div className="flex gap-4 mt-4">
            <button
              onClick={confirmAndSend}
              className="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700"
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
            </button>
            <button
              onClick={() => setShowConfirmation(false)}
              className="bg-gray-400 text-white px-4 py-2 rounded hover:bg-gray-500"
            >
              –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            </button>
          </div>
        </div>
      )}
    </div>
  );
}
