import { Update, Start, Hears, InjectBot } from 'nestjs-telegraf';
import { Telegraf, Context } from 'telegraf';
import { BotService } from './bot.service';
import { UsersService } from '../users/users.service'; // ‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º UsersService

@Update()
export class BotUpdate {
  constructor(
    @InjectBot() private readonly bot: Telegraf<Context>,
    private readonly appService: BotService,
    private readonly usersService: UsersService // ‚úÖ –ò–Ω–∂–µ–∫—Ç–∏–º UsersService
  ) {}

  @Start()
  async onStart(ctx: Context) {
    await ctx.reply(`–ü—Ä–∏–≤–µ—Ç!`);
  }

  @Hears('—é–∑–µ—Ä—ã')
  async onUsersRequest(ctx: Context) {
    const users = await this.usersService.getAllUsers(); // ‚úÖ –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if (users.length === 0) {
      await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç.');
    } else {
      const userList = users.map(user => `üÜî ${user.id} - üìß ${user.email}`).join('\n'); // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫
      await ctx.reply(`–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n${userList}`);
    }
  }
}
