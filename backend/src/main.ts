import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { FastifyAdapter, NestFastifyApplication } from '@nestjs/platform-fastify';
import * as fastifyHelmet from 'fastify-helmet';
import * as fastifyCookie from '@fastify/cookie';
import * as fastifyCors from '@fastify/cors';
import * as fastifyRawBody from 'fastify-raw-body';
import serveStatic = require('@fastify/static');
import * as pointOfView from 'point-of-view';
import * as handlebars from 'handlebars';
import { Telegraf } from 'telegraf';
import { join } from 'path';

const PORT = process.env.PORT || 3001;
const SECRET = process.env.SECRET || 'SEKRETA_NET';

async function bootstrap() {
  const app = await NestFactory.create<NestFastifyApplication>(
    AppModule,
    new FastifyAdapter(),
  );

  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ @fastify/static
  await app.register((serveStatic as any).default || serveStatic, {
    root: join(__dirname, '..', 'public'),
    prefix: '/public/',
  });

  // –ü–æ–¥–∫–ª—é—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ middleware
  await app.register(fastifyCookie as any, { secret: SECRET });
  await app.register(fastifyRawBody as any, { global: false });
  await app.register(fastifyHelmet);
  await app.register(fastifyCors as any, {
    origin: ['http://localhost:3000', 'http://seawindtravel.ru'],
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
    credentials: true,
    optionsSuccessStatus: 204,
  });

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è pointOfView –∏ handlebars
  await app.register(pointOfView, {
    engine: { handlebars },
    templates: 'views',
  });

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å Fastify
  const fastify = app.getHttpAdapter().getInstance();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
  const bot = app.get(Telegraf); // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞

  // –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞ –¥–ª—è –±–æ—Ç–∞
  const webhook = await bot.createWebhook({ domain: 'https://seawindtravel.ru' });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Fastify
  fastify.post('/api/bot/webhook', async (req: any, res: any) => {
    const update = req.body; // –ø–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞

    try {
      await webhook(req.raw, res.raw); // –ø–µ—Ä–µ–¥–∞–µ–º raw –∑–∞–ø—Ä–æ—Å –≤ Telegraf
    } catch (err) {
      res.status(500).send({ error: 'Webhook failed' });
    }
  });

  // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
  await app.listen(PORT, '0.0.0.0');
  console.log(`üöÄ Server started on http://localhost:${PORT}`);
}

bootstrap();
